---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: api-gateway-sandbox-pipeline
spec:
  params:
    - name: github-host-url
      description: the github/gitea host domain
    - name: git-full-repo-name
      description: the full git repo name (gitea/acmebank-apiops-gateway)
      default: gitea/acmebank-apiops-gateway
    - name: git-branch
      description: branch to pull down
    - name: api-spec-file
      description: insomnia apispec id to be tested
    - name: api-spec-src
      description: path to the api-spec-file
    - name: konnect-runtime-group-name
      description: the konnect runtime group where the apispec will be synced to
  workspaces:
    - name: source
    - name: deck
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: source
      params:
        - name: url
          value: $(params.github-host-url)/$(params.git-full-repo-name)
        - name: revision
          value: "$(params.git-branch)"
        - name: deleteExisting
          value: "true"
        - name: subdirectory
          value: apiops-gateway
    - name: inso-lint
      taskRef: 
        name: inso-cli
      runAfter:
        - fetch-repository
      workspaces: 
        - name: source
          workspace: source
      params: 
        - name: SCRIPT
          value: > 
            inso lint spec apiops-gateway/api/$(params.api-spec-src)/$(params.api-spec-file)
    - name: security-lint
      runAfter: 
        - fetch-repository
      workspaces: 
        - name: source
          workspace: source
      params: 
        - name: API-SPEC-FILE
          value: $(params.api-spec-file)
        - name: API-SPEC-SRC
          value: $(params.api-spec-src)
      taskSpec: 
        workspaces: 
          - name: source
        params: 
          - name: API-SPEC-FILE
          - name: API-SPEC-SRC
        steps: 
          - image: docker.io/stoplight/spectral:6.6.0
            workingDir: $(workspaces.source.path)
            script: | 
              #!/usr/bin/env sh
              spectral lint apiops-gateway/api/$(params.API-SPEC-SRC)/$(params.API-SPEC-FILE) --ruleset apiops-gateway/api-guidelines/spectral.yaml
    - name: yq-api-spec-servers
      taskRef: 
        name: yq
      runAfter: 
        - inso-lint
        - security-lint
      workspaces: 
        - name: source 
          workspace: source
      params: 
        - name: SCRIPT
          value: |
            /usr/bin/yq 'del(.servers[] | select (.url == "*")) | .servers += {"url":"sandbox", "description": "sandbox-gateway-env"}' apiops-gateway/api/$(params.api-spec-src)/$(params.api-spec-file) > apiops-gateway/api/$(params.api-spec-src)/devportal/$(params.api-spec-file)
    - name: inso-generate-deck
      taskRef: 
        name: inso-cli
      runAfter: 
        - yq-api-spec-servers
      workspaces:
        - name: source
          workspace: source
      params: 
        - name: SCRIPT
          value: >
            inso generate config --tags $(params.api-spec-src)  apiops-gateway/api/$(params.api-spec-src)/devportal/$(params.api-spec-file) --type declarative --ci --output apiops-gateway/api/$(params.api-spec-src)/deck/kong_$(params.api-spec-src).yml
    - name: deck-convert-kong-3
      taskRef:
        name: deck-cli
      runAfter: 
        - inso-generate-deck
      workspaces: 
        - name: source
          workspace: source
      params:
        - name: SCRIPT
          value: | 
            #!/usr/bin/env sh 
            deck convert --yes --from kong-gateway-2.x --to kong-gateway-3.x --input-file apiops-gateway/api/$(params.api-spec-src)/deck/kong_$(params.api-spec-src).yml --output-file apiops-gateway/api/$(params.api-spec-src)/deck/kong3_$(params.api-spec-src).yml
            rm apiops-gateway/api/$(params.api-spec-src)/deck/kong_$(params.api-spec-src).yml
    - name: deck-diff
      taskRef: 
        name: deck-cli
      runAfter: 
        - deck-convert-kong-3
      workspaces: 
        - name: source 
          workspace: source 
        - name: deck
          workspace: deck
      params:
        - name: SCRIPT
          value: | 
            #!/usr/bin/env sh
            echo $HOME
            ls -al
            deck sync --state apiops-gateway/api/$(params.api-spec-src)/deck/kong3_$(params.api-spec-src).yml --konnect-runtime-group-name $(params.konnect-runtime-group)
    - name: update-pr
      runAfter:
        - deck-diff
      workspaces: 
        - name: source
          workspace: source
      params:
        - name: GIT-BRANCH
          value: $(params.git-branch)
      taskSpec: 
        workspaces: 
          - name: source
        params: 
          - name: GIT-BRANCH
        stepTemplate:
          env:
          - name: "HOME"
            value: "/tekton/home"
        steps:
        - image: alpine/git:v2.26.2
          workingDir: $(workspaces.source.path)        
          script: | 
            #!/usr/bin/env sh
            cd apiops-gateway 
            git config --global user.email "apiopsbot@gmail.com"
            git config --global user.name "apioops"
            echo =====check git status =========
            git switch $(params.GIT-BRANCH)
            git branch
            git add .  
            git status
            git commit -m "apiops-pr-update"
            git push -u origin $(params.GIT-BRANCH)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-gateway-dev-pvc
spec:
  resources:
    requests:
      storage: 16Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: build-bot 
secrets:
  - name: github-basic-auth