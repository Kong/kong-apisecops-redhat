
---
- name: 'Install Kong APISecOps Demo'
  hosts: localhost
  connection: local
  vars_files: 
    - "{{ playbook_dir }}/vars/vars.yaml"

  tasks: 
# Operators Cert Manager and Openshift Pipelines
    - name: Install Operators
      include_tasks: tasks/operator/tasks-operator.yaml

# Gitea
    - name: Install Gitea
      include_tasks: tasks/gitea/tasks-gitea.yaml

# APIOps Namespace
    - name: Create and Configure APIOps Namespace
      include_tasks: tasks/tekton/tasks-tekton.yaml
      vars: 
        namespace: "{{ item.namespace }}"
        pipelines: "{{ item.pipelines }}"
        gitea_domain: "{{ gitea_route.spec.host }}"
        gitea_namespace: gitea
      loop: "{{ apiops }}"

# Konnect
    - name: Create Konnect Runtime Groups and Dataplanes
      include_tasks: tasks/konnect/tasks-konnect.yaml
      vars: 
        runtime_group: "{{ item.runtime_group }}"
        namespace: "{{ item.namespace }}"
        dataplane_name: "{{ item.dataplane_name }}"
        crt_secret: "{{ item.crt_secret }}"
        pipeline_namespace: "{{ item.pipeline_namespace }}"  
      loop: "{{ konnect }}"

# PipelineRuns
    - name: Create PipelineRuns 
      ansible.builtin.template: 
        src: "tasks/tekton/templates/pipeline-run/{{ item }}.j2"
        dest: "../run/{{ item }}.yaml"
      vars: 
        github_domain: "{{ gitea_route.spec.host }}"
        protocol: http
        konnect_dev_proxy_url: "{{ demo_facts['kong-dev']['schema'] }}://{{ demo_facts['kong-dev']['host'] }}"
      loop: "{{ pipeline_runs }}"

# Disputes Microservice
    - name: Install Disputes Microservice
      include_tasks: tasks/microservice/tasks-microservice.yaml
      vars: 
        namespace: "{{ item.namespace }}"
        manifest_path: "{{ item.manifest_path }}"
      loop: "{{ microservices }}" 
  
# Output Data and End
    - name: Get Openshift Console URL
      ansible.builtin.set_fact: 
        ocp_console_url: "{{ lookup('kubernetes.core.k8s', kind='Route', namespace='openshift-console', resource_name='openshift-console') }}"
    
    - name: Append to Openshift Console URL to demo facts
      ansible.builtin.set_fact: 
        demo_facts: "{{ demo_facts | combine({ 'ocp_url': ocp_console_url }) }}"

    - name: Print Demo Facts
      debug: 
        var: demo_facts
    
    - name: Print Demo Facts to Local file
      ansible.builtin.copy: 
        dest: "{{playbook_dir}}/demo_facts.json"
        content: "{{ demo_facts | to_nice_json }}"
    
    - name: Last Note
      debug: 
        msg: [
            "The APISecOps Demo Env Setup is now complete on the rosa cluster.",
            "Have fun learning APISecOps in Kong Konnect land.",
            "Best Regards - ",
            "Your Friendly Neighborhood Kong Partner Engineering Team."
          ]