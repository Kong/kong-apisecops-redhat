---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: api-gateway-dev-pipeline
spec:
  params:
    - name: github-host-url
      description: the github/gitea host domain
    - name: git-full-repo-name
      description: the full git repo name (gitea/acmebank-apiops-gateway)
      default: gitea/acmebank-apiops-gateway
    - name: git-branch
      description: branch to pull down
    - name: microservice
      description: name of the microservice to update and manage
    - name: api-spec-version
      description: name of the apispec version being deployed
    - name: konnect-runtime-group-name 
      description: the konnect runtime group where the apispec will be synced to
  workspaces:
    - name: source
    - name: deck
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: source
      params:
        - name: url
          value: $(params.github-host-url)/$(params.git-full-repo-name)
        - name: revision
          value: "$(params.git-branch)"
        - name: deleteExisting
          value: "true"
        - name: subdirectory
          value: apiops-gateway
    - name: deck-dev-prep
      taskRef: 
        name: yq
      runAfter: 
        - fetch-repository
      workspaces: 
        - name: source
          workspace: source
      params: 
        - name: SCRIPT
          value: |
            /usr/bin/yq -i 'with(.services[]; .host = "$(params.microservice).$(params.microservice)-dev.svc.cluster.local" )' apiops-gateway/api/$(params.microservice)/deck/kong3_$(params.microservice).yml
            /usr/bin/yq -i 'del(.services.[] | select(.name == "$(params.microservice)").plugins)' apiops-gateway/api/$(params.microservice)/deck/kong3_$(params.microservice).yml
            /usr/bin/yq -i '.services[].tags += ["_KonnectService:$(params.microservice)"]' apiops-gateway/api/$(params.microservice)/deck/kong3_$(params.microservice).yml
            /usr/bin/yq -i '._konnect.runtime_group_name = "$(params.konnect-runtime-group-name)"' apiops-gateway/api/$(params.microservice)/deck/kong3_$(params.microservice).yml
    - name: deck-sync
      taskRef:
        name: deck-cli
      runAfter:
        - deck-dev-prep
      workspaces: 
        - name: source
          workspace: source
        - name: deck 
          workspace: deck
      params:
        - name: SCRIPT
          value: | 
            #!/usr/bin/env sh
            ls -al
            deck sync --state apiops-gateway/api/$(params.microservice)/deck/kong3_$(params.microservice).yml
    - name: create-branch
      runAfter:
        - deck-sync
      workspaces: 
        - name: source
          workspace: source
      params:
        - name: API-SPEC-VERSION
          value: $(params.api-spec-version)
      taskSpec: 
        workspaces: 
          - name: source
        params: 
          - name: API-SPEC-VERSION
        stepTemplate:
          env:
          - name: "HOME"
            value: "/tekton/home"
        steps:
        - image: alpine/git:v2.26.2
          workingDir: $(workspaces.source.path)        
          script: | 
            #!/usr/bin/env sh 
            cd apiops-gateway
            git config --global user.email "admin@gitea.com"
            git config --global user.name "gitea"
            git checkout -b disputes-$(params.API-SPEC-VERSION)-dev

            echo check git status =========
            git status
            git add . 
            
            git commit -m "disputes new apispec $(params.API-SPEC-VERSION) for dev"
            git push -u origin disputes-$(params.API-SPEC-VERSION)-dev
    - name: open-pr-to-dev
      taskRef:
        name: github-open-pr
      runAfter: 
        - create-branch
      params:
        - name: GITHUB_HOST_URL
          value: $(params.github-host-url) 
        - name: API_PATH_PREFIX
          value: /api/v1
        - name: REPO_FULL_NAME
          value: $(params.git-full-repo-name)
        - name: HEAD
          value: "$(params.microservice)-$(params.api-spec-version)-dev"
        - name: BASE
          value: dev
        - name: TITLE
          value: "$(params.microservice) API Version $(params.api-spec-version)"
        - name: BODY 
          value: "$(params.microservice) API Spec update $(params.api-spec-version)"
        - name: GITHUB_TOKEN_SECRET_KEY
          value: token
        - name: GITHUB_TOKEN_SECRET_NAME
          value: github-token
        - name: AUTH_TYPE
          value: Bearer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-gateway-dev-pvc
spec:
  resources:
    requests:
      storage: 16Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: build-bot 
secrets:
  - name: github-basic-auth